

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 09 00:46:39 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  0209                     __pidataBANK0:
   219                           
   220                           ;initializer for _tabla_7seg
   221  0209  343F               	retlw	63
   222  020A  3406               	retlw	6
   223  020B  345B               	retlw	91
   224  020C  344F               	retlw	79
   225  020D  3466               	retlw	102
   226  020E  346D               	retlw	109
   227  020F  347D               	retlw	125
   228  0210  3407               	retlw	7
   229  0211  347F               	retlw	127
   230  0212  346F               	retlw	111
   231  0006                     _PORTB	set	6
   232  0001                     _TMR0	set	1
   233  0008                     _PORTD	set	8
   234  0009                     _PORTE	set	9
   235  0007                     _PORTC	set	7
   236  0005                     _PORTA	set	5
   237  0006                     _PORTBbits	set	6
   238  000B                     _INTCONbits	set	11
   239  0096                     _IOCBbits	set	150
   240  0095                     _WPUBbits	set	149
   241  0081                     _OPTION_REGbits	set	129
   242  0089                     _TRISEbits	set	137
   243  0088                     _TRISD	set	136
   244  0087                     _TRISC	set	135
   245  0086                     _TRISBbits	set	134
   246  0085                     _TRISA	set	133
   247  008F                     _OSCCONbits	set	143
   248  0189                     _ANSELH	set	393
   249  0188                     _ANSEL	set	392
   250                           
   251                           	psect	cinit
   252  000F                     start_initialization:	
   253                           ; #config settings
   254                           
   255  000F                     __initialization:
   256                           
   257                           ; Initialize objects allocated to BANK0
   258  000F  1383               	bcf	3,7	;select IRP bank0
   259  0010  303A               	movlw	low (__pdataBANK0+10)
   260  0011  00FD               	movwf	btemp+-1
   261  0012  3002               	movlw	high __pidataBANK0
   262  0013  00FE               	movwf	btemp
   263  0014  3009               	movlw	low __pidataBANK0
   264  0015  00FF               	movwf	btemp+1
   265  0016  3030               	movlw	low __pdataBANK0
   266  0017  0084               	movwf	4
   267  0018  120A  118A  21FA  120A  118A  	fcall	init_ram0
   268                           
   269                           ; Clear objects allocated to BANK0
   270  001D  01BA               	clrf	__pbssBANK0& (0+127)
   271  001E  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   272  001F  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   273  0020  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   274  0021  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   275  0022  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   276                           
   277                           ; Clear objects allocated to COMMON
   278  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   279  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   280  0025                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0025                     __end_of__initialization:
   284  0025  0183               	clrf	3
   285  0026  120A  118A  29A6   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0079                     __pbssCOMMON:
   289  0079                     _banderas:
   290  0079                     	ds	1
   291  007A                     _cont_tmr0:
   292  007A                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295  003A                     __pbssBANK0:
   296  003A                     _val_disp:
   297  003A                     	ds	3
   298  003D                     _val_div:
   299  003D                     	ds	3
   300                           
   301                           	psect	dataBANK0
   302  0030                     __pdataBANK0:
   303  0030                     _tabla_7seg:
   304  0030                     	ds	10
   305                           
   306                           	psect	inittext
   307  01F6                     init_fetch0:	
   308                           ;	Called with low address in FSR and high address in W
   309                           
   310  01F6  087E               	movf	btemp,w
   311  01F7  008A               	movwf	10
   312  01F8  087F               	movf	btemp+1,w
   313  01F9  0082               	movwf	2
   314  01FA                     init_ram0:	
   315                           ;Called with:
   316                           ;	high address of idata address in btemp 
   317                           ;	low address of idata address in btemp+1 
   318                           ;	low address of data in FSR
   319                           ;	high address + 1 of data in btemp-1
   320                           
   321  01FA  120A  118A  21F6  120A  118A  	fcall	init_fetch0
   322  01FF  0080               	movwf	0
   323  0200  0A84               	incf	4,f
   324  0201  0804               	movf	4,w
   325  0202  067D               	xorwf	btemp+-1,w
   326  0203  1903               	btfsc	3,2
   327  0204  3400               	retlw	0
   328  0205  0AFF               	incf	btemp+1,f
   329  0206  1903               	btfsc	3,2
   330  0207  0AFE               	incf	btemp,f
   331  0208  29FA               	goto	init_ram0
   332                           
   333                           	psect	cstackCOMMON
   334  0070                     __pcstackCOMMON:
   335  0070                     ?_setup:
   336  0070                     ?_division:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_isr:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ??_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0070                     	ds	3
   351  0073                     ??_setup:
   352  0073                     ?_set_displays:	
   353                           ; 1 bytes @ 0x3
   354                           
   355  0073                     ?___bmul:	
   356                           ; 1 bytes @ 0x3
   357                           
   358  0073                     ?___wmul:	
   359                           ; 1 bytes @ 0x3
   360                           
   361  0073                     set_displays@CONTEO_D:	
   362                           ; 2 bytes @ 0x3
   363                           
   364  0073                     ___bmul@multiplicand:	
   365                           ; 1 bytes @ 0x3
   366                           
   367  0073                     ___wmul@multiplier:	
   368                           ; 1 bytes @ 0x3
   369                           
   370                           
   371                           ; 2 bytes @ 0x3
   372  0073                     	ds	1
   373  0074                     ??___bmul:
   374  0074                     set_displays@CONTEO_C:	
   375                           ; 1 bytes @ 0x4
   376                           
   377                           
   378                           ; 1 bytes @ 0x4
   379  0074                     	ds	1
   380  0075                     ??_set_displays:
   381  0075                     ___bmul@product:	
   382                           ; 1 bytes @ 0x5
   383                           
   384  0075                     ___wmul@multiplicand:	
   385                           ; 1 bytes @ 0x5
   386                           
   387                           
   388                           ; 2 bytes @ 0x5
   389  0075                     	ds	1
   390  0076                     set_displays@CONTEO_U:
   391  0076                     ___bmul@multiplier:	
   392                           ; 1 bytes @ 0x6
   393                           
   394                           
   395                           ; 1 bytes @ 0x6
   396  0076                     	ds	1
   397  0077                     ??___wmul:
   398  0077                     ___wmul@product:	
   399                           ; 1 bytes @ 0x7
   400                           
   401                           
   402                           ; 2 bytes @ 0x7
   403  0077                     	ds	2
   404                           
   405                           	psect	cstackBANK0
   406  0020                     __pcstackBANK0:
   407  0020                     ?___awdiv:
   408  0020                     ___awdiv@divisor:	
   409                           ; 2 bytes @ 0x0
   410                           
   411                           
   412                           ; 2 bytes @ 0x0
   413  0020                     	ds	2
   414  0022                     ___awdiv@dividend:
   415                           
   416                           ; 2 bytes @ 0x2
   417  0022                     	ds	2
   418  0024                     ??___awdiv:
   419                           
   420                           ; 1 bytes @ 0x4
   421  0024                     	ds	1
   422  0025                     ___awdiv@counter:
   423                           
   424                           ; 1 bytes @ 0x5
   425  0025                     	ds	1
   426  0026                     ___awdiv@sign:
   427                           
   428                           ; 1 bytes @ 0x6
   429  0026                     	ds	1
   430  0027                     ___awdiv@quotient:
   431                           
   432                           ; 2 bytes @ 0x7
   433  0027                     	ds	2
   434  0029                     ??_division:
   435                           
   436                           ; 1 bytes @ 0x9
   437  0029                     	ds	4
   438  002D                     division@CONTEO:
   439                           
   440                           ; 1 bytes @ 0xD
   441  002D                     	ds	1
   442  002E                     ??_main:
   443                           
   444                           ; 1 bytes @ 0xE
   445  002E                     	ds	2
   446                           
   447                           	psect	maintext
   448  01A6                     __pmaintext:	
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 96 in file "main_Postlab.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : B00/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0
   470 ;;      Temps:          0       2       0       0       0
   471 ;;      Totals:         0       2       0       0       0
   472 ;;Total ram usage:        2 bytes
   473 ;; Hardware stack levels required when called: 3
   474 ;; This function calls:
   475 ;;		_division
   476 ;;		_set_displays
   477 ;;		_setup
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483  01A6                     _main:	
   484                           ;psect for function _main
   485                           
   486  01A6                     l1131:	
   487                           ;incstack = 0
   488                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   489                           
   490                           
   491                           ;main_Postlab.c: 98:     setup();
   492  01A6  120A  118A  214F  120A  118A  	fcall	_setup
   493  01AB                     l75:	
   494                           ;main_Postlab.c: 100:     while(1)
   495                           
   496                           
   497                           ;main_Postlab.c: 101:     {;main_Postlab.c: 102:         division(PORTA);
   498  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   499  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   500  01AD  0805               	movf	5,w	;volatile
   501  01AE  120A  118A  2092  120A  118A  	fcall	_division
   502  01B3                     l1133:
   503                           
   504                           ;main_Postlab.c: 103:         set_displays(val_div[0],val_div[1],val_div[2]);
   505  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   506  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   507  01B5  083E               	movf	_val_div+1,w
   508  01B6  00AE               	movwf	??_main
   509  01B7  082E               	movf	??_main,w
   510  01B8  00F3               	movwf	set_displays@CONTEO_D
   511  01B9  083F               	movf	_val_div+2,w
   512  01BA  00AF               	movwf	??_main+1
   513  01BB  082F               	movf	??_main+1,w
   514  01BC  00F4               	movwf	set_displays@CONTEO_C
   515  01BD  083D               	movf	_val_div,w
   516  01BE  120A  118A  21C7  120A  118A  	fcall	_set_displays
   517  01C3  29AB               	goto	l75
   518  01C4  120A  118A  280C   	ljmp	start
   519  01C7                     __end_of_main:
   520                           
   521                           	psect	text1
   522  014F                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 107 in file "main_Postlab.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553  014F                     _setup:	
   554                           ;psect for function _setup
   555                           
   556  014F                     l939:	
   557                           ;incstack = 0
   558                           ; Regs used in _setup: [wreg+status,2+status,0]
   559                           
   560                           
   561                           ;main_Postlab.c: 108:     ANSEL = 0;
   562  014F  1683               	bsf	3,5	;RP0=1, select bank3
   563  0150  1703               	bsf	3,6	;RP1=1, select bank3
   564  0151  0188               	clrf	8	;volatile
   565                           
   566                           ;main_Postlab.c: 109:     ANSELH = 0;
   567  0152  0189               	clrf	9	;volatile
   568  0153                     l941:
   569                           
   570                           ;main_Postlab.c: 111:     OSCCONbits.IRCF = 0b0110;
   571  0153  1683               	bsf	3,5	;RP0=1, select bank1
   572  0154  1303               	bcf	3,6	;RP1=0, select bank1
   573  0155  080F               	movf	15,w	;volatile
   574  0156  398F               	andlw	-113
   575  0157  3860               	iorlw	96
   576  0158  008F               	movwf	15	;volatile
   577  0159                     l943:
   578                           
   579                           ;main_Postlab.c: 112:     OSCCONbits.SCS = 1;
   580  0159  140F               	bsf	15,0	;volatile
   581  015A                     l945:
   582                           
   583                           ;main_Postlab.c: 114:     TRISA = 0;
   584  015A  0185               	clrf	5	;volatile
   585  015B                     l947:
   586                           
   587                           ;main_Postlab.c: 115:     TRISBbits.TRISB0 = 1;
   588  015B  1406               	bsf	6,0	;volatile
   589  015C                     l949:
   590                           
   591                           ;main_Postlab.c: 116:     TRISBbits.TRISB1 = 1;
   592  015C  1486               	bsf	6,1	;volatile
   593  015D                     l951:
   594                           
   595                           ;main_Postlab.c: 117:     TRISC = 0;
   596  015D  0187               	clrf	7	;volatile
   597  015E                     l953:
   598                           
   599                           ;main_Postlab.c: 118:     TRISD = 0;
   600  015E  0188               	clrf	8	;volatile
   601  015F                     l955:
   602                           
   603                           ;main_Postlab.c: 119:     TRISEbits.TRISE0 = 0;
   604  015F  1009               	bcf	9,0	;volatile
   605  0160                     l957:
   606                           
   607                           ;main_Postlab.c: 120:     TRISEbits.TRISE1 = 0;
   608  0160  1089               	bcf	9,1	;volatile
   609  0161                     l959:
   610                           
   611                           ;main_Postlab.c: 121:     TRISEbits.TRISE2 = 0;
   612  0161  1109               	bcf	9,2	;volatile
   613  0162                     l961:
   614                           
   615                           ;main_Postlab.c: 123:     PORTA = 0x00;
   616  0162  1283               	bcf	3,5	;RP0=0, select bank0
   617  0163  1303               	bcf	3,6	;RP1=0, select bank0
   618  0164  0185               	clrf	5	;volatile
   619  0165                     l963:
   620                           
   621                           ;main_Postlab.c: 124:     PORTB = 0x00;
   622  0165  0186               	clrf	6	;volatile
   623  0166                     l965:
   624                           
   625                           ;main_Postlab.c: 125:     PORTC = 0x00;
   626  0166  0187               	clrf	7	;volatile
   627  0167                     l967:
   628                           
   629                           ;main_Postlab.c: 126:     PORTD = 0x00;
   630  0167  0188               	clrf	8	;volatile
   631  0168                     l969:
   632                           
   633                           ;main_Postlab.c: 127:     PORTE = 0x00;
   634  0168  0189               	clrf	9	;volatile
   635  0169                     l971:
   636                           
   637                           ;main_Postlab.c: 129:     OPTION_REGbits.nRBPU = 0;
   638  0169  1683               	bsf	3,5	;RP0=1, select bank1
   639  016A  1303               	bcf	3,6	;RP1=0, select bank1
   640  016B  1381               	bcf	1,7	;volatile
   641  016C                     l973:
   642                           
   643                           ;main_Postlab.c: 130:     WPUBbits.WPUB0 = 1;
   644  016C  1415               	bsf	21,0	;volatile
   645  016D                     l975:
   646                           
   647                           ;main_Postlab.c: 131:     WPUBbits.WPUB1 = 1;
   648  016D  1495               	bsf	21,1	;volatile
   649  016E                     l977:
   650                           
   651                           ;main_Postlab.c: 134:     OPTION_REGbits.T0CS = 0;
   652  016E  1281               	bcf	1,5	;volatile
   653  016F                     l979:
   654                           
   655                           ;main_Postlab.c: 135:     OPTION_REGbits.PSA = 0;
   656  016F  1181               	bcf	1,3	;volatile
   657  0170                     l981:
   658                           
   659                           ;main_Postlab.c: 136:     OPTION_REGbits.PS2 = 1;
   660  0170  1501               	bsf	1,2	;volatile
   661  0171                     l983:
   662                           
   663                           ;main_Postlab.c: 137:     OPTION_REGbits.PS1 = 1;
   664  0171  1481               	bsf	1,1	;volatile
   665  0172                     l985:
   666                           
   667                           ;main_Postlab.c: 138:     OPTION_REGbits.PS0 = 1;
   668  0172  1401               	bsf	1,0	;volatile
   669  0173                     l987:
   670                           
   671                           ;main_Postlab.c: 139:     TMR0 = 217;
   672  0173  30D9               	movlw	217
   673  0174  1283               	bcf	3,5	;RP0=0, select bank0
   674  0175  1303               	bcf	3,6	;RP1=0, select bank0
   675  0176  0081               	movwf	1	;volatile
   676  0177                     l989:
   677                           
   678                           ;main_Postlab.c: 141:     INTCONbits.GIE = 1;
   679  0177  178B               	bsf	11,7	;volatile
   680  0178                     l991:
   681                           
   682                           ;main_Postlab.c: 142:     INTCONbits.RBIE = 0;
   683  0178  118B               	bcf	11,3	;volatile
   684  0179                     l993:
   685                           
   686                           ;main_Postlab.c: 143:     INTCONbits.T0IE = 1;
   687  0179  168B               	bsf	11,5	;volatile
   688  017A                     l995:
   689                           
   690                           ;main_Postlab.c: 144:     IOCBbits.IOCB0 = 1;
   691  017A  1683               	bsf	3,5	;RP0=1, select bank1
   692  017B  1303               	bcf	3,6	;RP1=0, select bank1
   693  017C  1416               	bsf	22,0	;volatile
   694  017D                     l997:
   695                           
   696                           ;main_Postlab.c: 145:     IOCBbits.IOCB1 = 1;
   697  017D  1496               	bsf	22,1	;volatile
   698  017E                     l999:
   699                           
   700                           ;main_Postlab.c: 146:     INTCONbits.RBIF = 0;
   701  017E  100B               	bcf	11,0	;volatile
   702  017F                     l1001:
   703                           
   704                           ;main_Postlab.c: 147:     INTCONbits.T0IF = 0;
   705  017F  110B               	bcf	11,2	;volatile
   706  0180                     l81:
   707  0180  0008               	return
   708  0181                     __end_of_setup:
   709                           
   710                           	psect	text2
   711  01C7                     __ptext2:	
   712 ;; *************** function _set_displays *****************
   713 ;; Defined at:
   714 ;;		line 158 in file "main_Postlab.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  CONTEO_U        1    wreg     unsigned char 
   717 ;;  CONTEO_D        1    3[COMMON] unsigned char 
   718 ;;  CONTEO_C        1    4[COMMON] unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  CONTEO_U        1    6[COMMON] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         2       0       0       0       0
   731 ;;      Locals:         1       0       0       0       0
   732 ;;      Temps:          1       0       0       0       0
   733 ;;      Totals:         4       0       0       0       0
   734 ;;Total ram usage:        4 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744  01C7                     _set_displays:	
   745                           ;psect for function _set_displays
   746                           
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _set_displays: [wreg-fsr0h+status,2+status,0]
   750                           ;set_displays@CONTEO_U stored from wreg
   751  01C7  00F6               	movwf	set_displays@CONTEO_U
   752  01C8                     l1007:
   753                           
   754                           ;main_Postlab.c: 159:     val_disp[0] = tabla_7seg[CONTEO_U];
   755  01C8  0876               	movf	set_displays@CONTEO_U,w
   756  01C9  3E30               	addlw	(low (_tabla_7seg| 0))& (0+255)
   757  01CA  0084               	movwf	4
   758  01CB  1383               	bcf	3,7	;select IRP bank0
   759  01CC  0800               	movf	0,w
   760  01CD  00F5               	movwf	??_set_displays
   761  01CE  0875               	movf	??_set_displays,w
   762  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   763  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   764  01D1  00BA               	movwf	_val_disp
   765                           
   766                           ;main_Postlab.c: 160:     val_disp[1] = tabla_7seg[CONTEO_D];
   767  01D2  0873               	movf	set_displays@CONTEO_D,w
   768  01D3  3E30               	addlw	(low (_tabla_7seg| 0))& (0+255)
   769  01D4  0084               	movwf	4
   770  01D5  0800               	movf	0,w
   771  01D6  00F5               	movwf	??_set_displays
   772  01D7  0875               	movf	??_set_displays,w
   773  01D8  00BB               	movwf	_val_disp+1
   774                           
   775                           ;main_Postlab.c: 161:     val_disp[2] = tabla_7seg[CONTEO_C];
   776  01D9  0874               	movf	set_displays@CONTEO_C,w
   777  01DA  3E30               	addlw	(low (_tabla_7seg| 0))& (0+255)
   778  01DB  0084               	movwf	4
   779  01DC  0800               	movf	0,w
   780  01DD  00F5               	movwf	??_set_displays
   781  01DE  0875               	movf	??_set_displays,w
   782  01DF  00BC               	movwf	_val_disp+2
   783  01E0                     l87:
   784  01E0  0008               	return
   785  01E1                     __end_of_set_displays:
   786                           
   787                           	psect	text3
   788  0092                     __ptext3:	
   789 ;; *************** function _division *****************
   790 ;; Defined at:
   791 ;;		line 151 in file "main_Postlab.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  CONTEO          1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  CONTEO          1   13[BANK0 ] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       1       0       0       0
   807 ;;      Temps:          0       4       0       0       0
   808 ;;      Totals:         0       5       0       0       0
   809 ;;Total ram usage:        5 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 2
   812 ;; This function calls:
   813 ;;		___awdiv
   814 ;;		___bmul
   815 ;;		___wmul
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821  0092                     _division:	
   822                           ;psect for function _division
   823                           
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   827                           ;division@CONTEO stored from wreg
   828  0092  1283               	bcf	3,5	;RP0=0, select bank0
   829  0093  1303               	bcf	3,6	;RP1=0, select bank0
   830  0094  00AD               	movwf	division@CONTEO
   831  0095                     l1127:
   832                           
   833                           ;main_Postlab.c: 152:     val_div[2] = CONTEO/100;
   834  0095  3064               	movlw	100
   835  0096  00A0               	movwf	___awdiv@divisor
   836  0097  3000               	movlw	0
   837  0098  00A1               	movwf	___awdiv@divisor+1
   838  0099  082D               	movf	division@CONTEO,w
   839  009A  00A9               	movwf	??_division
   840  009B  01AA               	clrf	??_division+1
   841  009C  0829               	movf	??_division,w
   842  009D  00A2               	movwf	___awdiv@dividend
   843  009E  082A               	movf	??_division+1,w
   844  009F  00A3               	movwf	___awdiv@dividend+1
   845  00A0  120A  118A  2029  120A  118A  	fcall	___awdiv
   846  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   847  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   848  00A7  0820               	movf	?___awdiv,w
   849  00A8  00AB               	movwf	??_division+2
   850  00A9  082B               	movf	??_division+2,w
   851  00AA  00BF               	movwf	_val_div+2
   852                           
   853                           ;main_Postlab.c: 153:     val_div[1] = (CONTEO-val_div[2]*100)/10;
   854  00AB  300A               	movlw	10
   855  00AC  00A0               	movwf	___awdiv@divisor
   856  00AD  3000               	movlw	0
   857  00AE  00A1               	movwf	___awdiv@divisor+1
   858  00AF  083F               	movf	_val_div+2,w
   859  00B0  00A9               	movwf	??_division
   860  00B1  01AA               	clrf	??_division+1
   861  00B2  0829               	movf	??_division,w
   862  00B3  00F3               	movwf	___wmul@multiplier
   863  00B4  082A               	movf	??_division+1,w
   864  00B5  00F4               	movwf	___wmul@multiplier+1
   865  00B6  309C               	movlw	156
   866  00B7  00F5               	movwf	___wmul@multiplicand
   867  00B8  30FF               	movlw	255
   868  00B9  00F6               	movwf	___wmul@multiplicand+1
   869  00BA  120A  118A  2181  120A  118A  	fcall	___wmul
   870  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   871  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   872  00C1  082D               	movf	division@CONTEO,w
   873  00C2  0773               	addwf	?___wmul,w
   874  00C3  00A2               	movwf	___awdiv@dividend
   875  00C4  0874               	movf	?___wmul+1,w
   876  00C5  1803               	skipnc
   877  00C6  0A74               	incf	?___wmul+1,w
   878  00C7  00A3               	movwf	___awdiv@dividend+1
   879  00C8  120A  118A  2029  120A  118A  	fcall	___awdiv
   880  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   881  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   882  00CF  0820               	movf	?___awdiv,w
   883  00D0  00AB               	movwf	??_division+2
   884  00D1  082B               	movf	??_division+2,w
   885  00D2  00BE               	movwf	_val_div+1
   886                           
   887                           ;main_Postlab.c: 154:     val_div[0] = CONTEO-val_div[2]*100-val_div[1]*10;
   888  00D3  309C               	movlw	156
   889  00D4  00A9               	movwf	??_division
   890  00D5  0829               	movf	??_division,w
   891  00D6  00F3               	movwf	___bmul@multiplicand
   892  00D7  083F               	movf	_val_div+2,w
   893  00D8  120A  118A  21E1  120A  118A  	fcall	___bmul
   894  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   895  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   896  00DF  00AA               	movwf	??_division+1
   897  00E0  30F6               	movlw	246
   898  00E1  00AB               	movwf	??_division+2
   899  00E2  082B               	movf	??_division+2,w
   900  00E3  00F3               	movwf	___bmul@multiplicand
   901  00E4  083E               	movf	_val_div+1,w
   902  00E5  120A  118A  21E1  120A  118A  	fcall	___bmul
   903  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   904  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   905  00EC  072A               	addwf	??_division+1,w
   906  00ED  072D               	addwf	division@CONTEO,w
   907  00EE  00AC               	movwf	??_division+3
   908  00EF  082C               	movf	??_division+3,w
   909  00F0  00BD               	movwf	_val_div
   910  00F1                     l84:
   911  00F1  0008               	return
   912  00F2                     __end_of_division:
   913                           
   914                           	psect	text4
   915  0181                     __ptext4:	
   916 ;; *************** function ___wmul *****************
   917 ;; Defined at:
   918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  multiplier      2    3[COMMON] unsigned int 
   921 ;;  multiplicand    2    5[COMMON] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  product         2    7[COMMON] unsigned int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2    3[COMMON] unsigned int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         4       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         6       0       0       0       0
   937 ;;Total ram usage:        6 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_division
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947  0181                     ___wmul:	
   948                           ;psect for function ___wmul
   949                           
   950  0181                     l1055:	
   951                           ;incstack = 0
   952                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   953                           
   954  0181  01F7               	clrf	___wmul@product
   955  0182  01F8               	clrf	___wmul@product+1
   956  0183                     l1057:
   957  0183  1C73               	btfss	___wmul@multiplier,0
   958  0184  2986               	goto	u491
   959  0185  2987               	goto	u490
   960  0186                     u491:
   961  0186  298D               	goto	l173
   962  0187                     u490:
   963  0187                     l1059:
   964  0187  0875               	movf	___wmul@multiplicand,w
   965  0188  07F7               	addwf	___wmul@product,f
   966  0189  1803               	skipnc
   967  018A  0AF8               	incf	___wmul@product+1,f
   968  018B  0876               	movf	___wmul@multiplicand+1,w
   969  018C  07F8               	addwf	___wmul@product+1,f
   970  018D                     l173:
   971  018D  3001               	movlw	1
   972  018E                     u505:
   973  018E  1003               	clrc
   974  018F  0DF5               	rlf	___wmul@multiplicand,f
   975  0190  0DF6               	rlf	___wmul@multiplicand+1,f
   976  0191  3EFF               	addlw	-1
   977  0192  1D03               	skipz
   978  0193  298E               	goto	u505
   979  0194                     l1061:
   980  0194  3001               	movlw	1
   981  0195                     u515:
   982  0195  1003               	clrc
   983  0196  0CF4               	rrf	___wmul@multiplier+1,f
   984  0197  0CF3               	rrf	___wmul@multiplier,f
   985  0198  3EFF               	addlw	-1
   986  0199  1D03               	skipz
   987  019A  2995               	goto	u515
   988  019B                     l1063:
   989  019B  0873               	movf	___wmul@multiplier,w
   990  019C  0474               	iorwf	___wmul@multiplier+1,w
   991  019D  1D03               	btfss	3,2
   992  019E  29A0               	goto	u521
   993  019F  29A1               	goto	u520
   994  01A0                     u521:
   995  01A0  2983               	goto	l1057
   996  01A1                     u520:
   997  01A1                     l1065:
   998  01A1  0878               	movf	___wmul@product+1,w
   999  01A2  00F4               	movwf	?___wmul+1
  1000  01A3  0877               	movf	___wmul@product,w
  1001  01A4  00F3               	movwf	?___wmul
  1002  01A5                     l175:
  1003  01A5  0008               	return
  1004  01A6                     __end_of___wmul:
  1005                           
  1006                           	psect	text5
  1007  01E1                     __ptext5:	
  1008 ;; *************** function ___bmul *****************
  1009 ;; Defined at:
  1010 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  multiplier      1    wreg     unsigned char 
  1013 ;;  multiplicand    1    3[COMMON] unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  multiplier      1    6[COMMON] unsigned char 
  1016 ;;  product         1    5[COMMON] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      unsigned char 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         1       0       0       0       0
  1027 ;;      Locals:         2       0       0       0       0
  1028 ;;      Temps:          1       0       0       0       0
  1029 ;;      Totals:         4       0       0       0       0
  1030 ;;Total ram usage:        4 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_division
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040  01E1                     ___bmul:	
  1041                           ;psect for function ___bmul
  1042                           
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1046                           ;___bmul@multiplier stored from wreg
  1047  01E1  00F6               	movwf	___bmul@multiplier
  1048  01E2                     l1069:
  1049  01E2  01F5               	clrf	___bmul@product
  1050  01E3                     l1071:
  1051  01E3  1C76               	btfss	___bmul@multiplier,0
  1052  01E4  29E6               	goto	u531
  1053  01E5  29E7               	goto	u530
  1054  01E6                     u531:
  1055  01E6  29EB               	goto	l1075
  1056  01E7                     u530:
  1057  01E7                     l1073:
  1058  01E7  0873               	movf	___bmul@multiplicand,w
  1059  01E8  00F4               	movwf	??___bmul
  1060  01E9  0874               	movf	??___bmul,w
  1061  01EA  07F5               	addwf	___bmul@product,f
  1062  01EB                     l1075:
  1063  01EB  1003               	clrc
  1064  01EC  0DF3               	rlf	___bmul@multiplicand,f
  1065  01ED                     l1077:
  1066  01ED  1003               	clrc
  1067  01EE  0CF6               	rrf	___bmul@multiplier,f
  1068  01EF  0876               	movf	___bmul@multiplier,w
  1069  01F0  1D03               	btfss	3,2
  1070  01F1  29F3               	goto	u541
  1071  01F2  29F4               	goto	u540
  1072  01F3                     u541:
  1073  01F3  29E3               	goto	l1071
  1074  01F4                     u540:
  1075  01F4                     l1079:
  1076  01F4  0875               	movf	___bmul@product,w
  1077  01F5                     l199:
  1078  01F5  0008               	return
  1079  01F6                     __end_of___bmul:
  1080                           
  1081                           	psect	text6
  1082  0029                     __ptext6:	
  1083 ;; *************** function ___awdiv *****************
  1084 ;; Defined at:
  1085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  divisor         2    0[BANK0 ] int 
  1088 ;;  dividend        2    2[BANK0 ] int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  quotient        2    7[BANK0 ] int 
  1091 ;;  sign            1    6[BANK0 ] unsigned char 
  1092 ;;  counter         1    5[BANK0 ] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2    0[BANK0 ] int 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       4       0       0       0
  1103 ;;      Locals:         0       4       0       0       0
  1104 ;;      Temps:          0       1       0       0       0
  1105 ;;      Totals:         0       9       0       0       0
  1106 ;;Total ram usage:        9 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_division
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116  0029                     ___awdiv:	
  1117                           ;psect for function ___awdiv
  1118                           
  1119  0029                     l1083:	
  1120                           ;incstack = 0
  1121                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1122                           
  1123  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1124  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1125  002B  01A6               	clrf	___awdiv@sign
  1126  002C                     l1085:
  1127  002C  1FA1               	btfss	___awdiv@divisor+1,7
  1128  002D  282F               	goto	u551
  1129  002E  2830               	goto	u550
  1130  002F                     u551:
  1131  002F  2837               	goto	l1091
  1132  0030                     u550:
  1133  0030                     l1087:
  1134  0030  09A0               	comf	___awdiv@divisor,f
  1135  0031  09A1               	comf	___awdiv@divisor+1,f
  1136  0032  0AA0               	incf	___awdiv@divisor,f
  1137  0033  1903               	skipnz
  1138  0034  0AA1               	incf	___awdiv@divisor+1,f
  1139  0035                     l1089:
  1140  0035  01A6               	clrf	___awdiv@sign
  1141  0036  0AA6               	incf	___awdiv@sign,f
  1142  0037                     l1091:
  1143  0037  1FA3               	btfss	___awdiv@dividend+1,7
  1144  0038  283A               	goto	u561
  1145  0039  283B               	goto	u560
  1146  003A                     u561:
  1147  003A  2844               	goto	l1097
  1148  003B                     u560:
  1149  003B                     l1093:
  1150  003B  09A2               	comf	___awdiv@dividend,f
  1151  003C  09A3               	comf	___awdiv@dividend+1,f
  1152  003D  0AA2               	incf	___awdiv@dividend,f
  1153  003E  1903               	skipnz
  1154  003F  0AA3               	incf	___awdiv@dividend+1,f
  1155  0040                     l1095:
  1156  0040  3001               	movlw	1
  1157  0041  00A4               	movwf	??___awdiv
  1158  0042  0824               	movf	??___awdiv,w
  1159  0043  06A6               	xorwf	___awdiv@sign,f
  1160  0044                     l1097:
  1161  0044  01A7               	clrf	___awdiv@quotient
  1162  0045  01A8               	clrf	___awdiv@quotient+1
  1163  0046                     l1099:
  1164  0046  0820               	movf	___awdiv@divisor,w
  1165  0047  0421               	iorwf	___awdiv@divisor+1,w
  1166  0048  1903               	btfsc	3,2
  1167  0049  284B               	goto	u571
  1168  004A  284C               	goto	u570
  1169  004B                     u571:
  1170  004B  2883               	goto	l1119
  1171  004C                     u570:
  1172  004C                     l1101:
  1173  004C  01A5               	clrf	___awdiv@counter
  1174  004D  0AA5               	incf	___awdiv@counter,f
  1175  004E  285A               	goto	l1107
  1176  004F                     l1103:
  1177  004F  3001               	movlw	1
  1178  0050                     u585:
  1179  0050  1003               	clrc
  1180  0051  0DA0               	rlf	___awdiv@divisor,f
  1181  0052  0DA1               	rlf	___awdiv@divisor+1,f
  1182  0053  3EFF               	addlw	-1
  1183  0054  1D03               	skipz
  1184  0055  2850               	goto	u585
  1185  0056                     l1105:
  1186  0056  3001               	movlw	1
  1187  0057  00A4               	movwf	??___awdiv
  1188  0058  0824               	movf	??___awdiv,w
  1189  0059  07A5               	addwf	___awdiv@counter,f
  1190  005A                     l1107:
  1191  005A  1FA1               	btfss	___awdiv@divisor+1,7
  1192  005B  285D               	goto	u591
  1193  005C  285E               	goto	u590
  1194  005D                     u591:
  1195  005D  284F               	goto	l1103
  1196  005E                     u590:
  1197  005E                     l1109:
  1198  005E  3001               	movlw	1
  1199  005F                     u605:
  1200  005F  1003               	clrc
  1201  0060  0DA7               	rlf	___awdiv@quotient,f
  1202  0061  0DA8               	rlf	___awdiv@quotient+1,f
  1203  0062  3EFF               	addlw	-1
  1204  0063  1D03               	skipz
  1205  0064  285F               	goto	u605
  1206  0065  0821               	movf	___awdiv@divisor+1,w
  1207  0066  0223               	subwf	___awdiv@dividend+1,w
  1208  0067  1D03               	skipz
  1209  0068  286B               	goto	u615
  1210  0069  0820               	movf	___awdiv@divisor,w
  1211  006A  0222               	subwf	___awdiv@dividend,w
  1212  006B                     u615:
  1213  006B  1C03               	skipc
  1214  006C  286E               	goto	u611
  1215  006D  286F               	goto	u610
  1216  006E                     u611:
  1217  006E  2876               	goto	l1115
  1218  006F                     u610:
  1219  006F                     l1111:
  1220  006F  0820               	movf	___awdiv@divisor,w
  1221  0070  02A2               	subwf	___awdiv@dividend,f
  1222  0071  0821               	movf	___awdiv@divisor+1,w
  1223  0072  1C03               	skipc
  1224  0073  03A3               	decf	___awdiv@dividend+1,f
  1225  0074  02A3               	subwf	___awdiv@dividend+1,f
  1226  0075                     l1113:
  1227  0075  1427               	bsf	___awdiv@quotient,0
  1228  0076                     l1115:
  1229  0076  3001               	movlw	1
  1230  0077                     u625:
  1231  0077  1003               	clrc
  1232  0078  0CA1               	rrf	___awdiv@divisor+1,f
  1233  0079  0CA0               	rrf	___awdiv@divisor,f
  1234  007A  3EFF               	addlw	-1
  1235  007B  1D03               	skipz
  1236  007C  2877               	goto	u625
  1237  007D                     l1117:
  1238  007D  3001               	movlw	1
  1239  007E  02A5               	subwf	___awdiv@counter,f
  1240  007F  1D03               	btfss	3,2
  1241  0080  2882               	goto	u631
  1242  0081  2883               	goto	u630
  1243  0082                     u631:
  1244  0082  285E               	goto	l1109
  1245  0083                     u630:
  1246  0083                     l1119:
  1247  0083  0826               	movf	___awdiv@sign,w
  1248  0084  1903               	btfsc	3,2
  1249  0085  2887               	goto	u641
  1250  0086  2888               	goto	u640
  1251  0087                     u641:
  1252  0087  288D               	goto	l1123
  1253  0088                     u640:
  1254  0088                     l1121:
  1255  0088  09A7               	comf	___awdiv@quotient,f
  1256  0089  09A8               	comf	___awdiv@quotient+1,f
  1257  008A  0AA7               	incf	___awdiv@quotient,f
  1258  008B  1903               	skipnz
  1259  008C  0AA8               	incf	___awdiv@quotient+1,f
  1260  008D                     l1123:
  1261  008D  0828               	movf	___awdiv@quotient+1,w
  1262  008E  00A1               	movwf	?___awdiv+1
  1263  008F  0827               	movf	___awdiv@quotient,w
  1264  0090  00A0               	movwf	?___awdiv
  1265  0091                     l326:
  1266  0091  0008               	return
  1267  0092                     __end_of___awdiv:
  1268                           
  1269                           	psect	text7
  1270  00F2                     __ptext7:	
  1271 ;; *************** function _isr *****************
  1272 ;; Defined at:
  1273 ;;		line 55 in file "main_Postlab.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          3       0       0       0       0
  1290 ;;      Totals:         3       0       0       0       0
  1291 ;;Total ram usage:        3 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		Interrupt level 1
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300  00F2                     _isr:	
  1301                           ;psect for function _isr
  1302                           
  1303  00F2                     i1l1011:
  1304                           
  1305                           ;main_Postlab.c: 57:     if (INTCONbits.RBIF){
  1306  00F2  1C0B               	btfss	11,0	;volatile
  1307  00F3  28F5               	goto	u41_21
  1308  00F4  28F6               	goto	u41_20
  1309  00F5                     u41_21:
  1310  00F5  2908               	goto	i1l1021
  1311  00F6                     u41_20:
  1312  00F6                     i1l1013:
  1313                           
  1314                           ;main_Postlab.c: 58:         if (!PORTBbits.RB0){
  1315  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1316  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1317  00F8  1806               	btfsc	6,0	;volatile
  1318  00F9  28FB               	goto	u42_21
  1319  00FA  28FC               	goto	u42_20
  1320  00FB                     u42_21:
  1321  00FB  2901               	goto	i1l60
  1322  00FC                     u42_20:
  1323  00FC                     i1l1015:
  1324                           
  1325                           ;main_Postlab.c: 59:             PORTA ++;
  1326  00FC  3001               	movlw	1
  1327  00FD  00F0               	movwf	??_isr
  1328  00FE  0870               	movf	??_isr,w
  1329  00FF  0785               	addwf	5,f	;volatile
  1330                           
  1331                           ;main_Postlab.c: 60:         } else if (!PORTBbits.RB1){
  1332  0100  2907               	goto	i1l1019
  1333  0101                     i1l60:
  1334  0101  1886               	btfsc	6,1	;volatile
  1335  0102  2904               	goto	u43_21
  1336  0103  2905               	goto	u43_20
  1337  0104                     u43_21:
  1338  0104  2907               	goto	i1l1019
  1339  0105                     u43_20:
  1340  0105                     i1l1017:
  1341                           
  1342                           ;main_Postlab.c: 61:             PORTA --;
  1343  0105  3001               	movlw	1
  1344  0106  0285               	subwf	5,f	;volatile
  1345  0107                     i1l1019:
  1346                           
  1347                           ;main_Postlab.c: 63:         INTCONbits.RBIF = 0;
  1348  0107  100B               	bcf	11,0	;volatile
  1349  0108                     i1l1021:
  1350                           
  1351                           ;main_Postlab.c: 66:     if (INTCONbits.T0IF){
  1352  0108  1D0B               	btfss	11,2	;volatile
  1353  0109  290B               	goto	u44_21
  1354  010A  290C               	goto	u44_20
  1355  010B                     u44_21:
  1356  010B  2948               	goto	i1l70
  1357  010C                     u44_20:
  1358  010C                     i1l1023:
  1359                           
  1360                           ;main_Postlab.c: 67:        cont_tmr0++;
  1361  010C  3001               	movlw	1
  1362  010D  00F0               	movwf	??_isr
  1363  010E  0870               	movf	??_isr,w
  1364  010F  07FA               	addwf	_cont_tmr0,f
  1365                           
  1366                           ;main_Postlab.c: 68:        if (cont_tmr0 == 10) {
  1367  0110  300A               	movlw	10
  1368  0111  067A               	xorwf	_cont_tmr0,w
  1369  0112  1D03               	btfss	3,2
  1370  0113  2915               	goto	u45_21
  1371  0114  2916               	goto	u45_20
  1372  0115                     u45_21:
  1373  0115  291D               	goto	i1l1029
  1374  0116                     u45_20:
  1375  0116                     i1l1025:
  1376                           
  1377                           ;main_Postlab.c: 69:            PORTC++;
  1378  0116  3001               	movlw	1
  1379  0117  00F0               	movwf	??_isr
  1380  0118  0870               	movf	??_isr,w
  1381  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1382  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1383  011B  0787               	addwf	7,f	;volatile
  1384  011C                     i1l1027:
  1385                           
  1386                           ;main_Postlab.c: 70:            cont_tmr0 = 0;
  1387  011C  01FA               	clrf	_cont_tmr0
  1388  011D                     i1l1029:
  1389                           
  1390                           ;main_Postlab.c: 73:        PORTE = 0;
  1391  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1392  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1393  011F  0189               	clrf	9	;volatile
  1394                           
  1395                           ;main_Postlab.c: 74:        if(banderas == 0){
  1396  0120  0879               	movf	_banderas,w
  1397  0121  1D03               	btfss	3,2
  1398  0122  2924               	goto	u46_21
  1399  0123  2925               	goto	u46_20
  1400  0124                     u46_21:
  1401  0124  292C               	goto	i1l1035
  1402  0125                     u46_20:
  1403  0125                     i1l1031:
  1404                           
  1405                           ;main_Postlab.c: 75:            PORTD = val_disp[0];
  1406  0125  083A               	movf	_val_disp,w
  1407  0126  0088               	movwf	8	;volatile
  1408                           
  1409                           ;main_Postlab.c: 76:            PORTE = 0b00000001;
  1410  0127  3001               	movlw	1
  1411  0128  0089               	movwf	9	;volatile
  1412  0129                     i1l1033:
  1413                           
  1414                           ;main_Postlab.c: 77:            banderas = 1;
  1415  0129  01F9               	clrf	_banderas
  1416  012A  0AF9               	incf	_banderas,f
  1417                           
  1418                           ;main_Postlab.c: 78:        }
  1419  012B  2945               	goto	i1l1045
  1420  012C                     i1l1035:
  1421  012C  0379               	decf	_banderas,w
  1422  012D  1D03               	btfss	3,2
  1423  012E  2930               	goto	u47_21
  1424  012F  2931               	goto	u47_20
  1425  0130                     u47_21:
  1426  0130  293A               	goto	i1l1039
  1427  0131                     u47_20:
  1428  0131                     i1l1037:
  1429                           
  1430                           ;main_Postlab.c: 80:            PORTD = val_disp[1];
  1431  0131  083B               	movf	_val_disp+1,w
  1432  0132  0088               	movwf	8	;volatile
  1433                           
  1434                           ;main_Postlab.c: 81:            PORTE = 0b00000010;
  1435  0133  3002               	movlw	2
  1436  0134  0089               	movwf	9	;volatile
  1437                           
  1438                           ;main_Postlab.c: 82:            banderas = 2;
  1439  0135  3002               	movlw	2
  1440  0136  00F0               	movwf	??_isr
  1441  0137  0870               	movf	??_isr,w
  1442  0138  00F9               	movwf	_banderas
  1443                           
  1444                           ;main_Postlab.c: 83:        }
  1445  0139  2945               	goto	i1l1045
  1446  013A                     i1l1039:
  1447  013A  3002               	movlw	2
  1448  013B  0679               	xorwf	_banderas,w
  1449  013C  1D03               	btfss	3,2
  1450  013D  293F               	goto	u48_21
  1451  013E  2940               	goto	u48_20
  1452  013F                     u48_21:
  1453  013F  2945               	goto	i1l1045
  1454  0140                     u48_20:
  1455  0140                     i1l1041:
  1456                           
  1457                           ;main_Postlab.c: 85:            PORTD = val_disp[2];
  1458  0140  083C               	movf	_val_disp+2,w
  1459  0141  0088               	movwf	8	;volatile
  1460                           
  1461                           ;main_Postlab.c: 86:            PORTE = 0b00000100;
  1462  0142  3004               	movlw	4
  1463  0143  0089               	movwf	9	;volatile
  1464  0144                     i1l1043:
  1465                           
  1466                           ;main_Postlab.c: 87:            banderas = 0;
  1467  0144  01F9               	clrf	_banderas
  1468  0145                     i1l1045:
  1469                           
  1470                           ;main_Postlab.c: 90:        INTCONbits.T0IF = 0;
  1471  0145  110B               	bcf	11,2	;volatile
  1472  0146                     i1l1047:
  1473                           
  1474                           ;main_Postlab.c: 91:        TMR0 = 217;
  1475  0146  30D9               	movlw	217
  1476  0147  0081               	movwf	1	;volatile
  1477  0148                     i1l70:
  1478  0148  0872               	movf	??_isr+2,w
  1479  0149  008A               	movwf	10
  1480  014A  0E71               	swapf	??_isr+1,w
  1481  014B  0083               	movwf	3
  1482  014C  0EFE               	swapf	btemp,f
  1483  014D  0E7E               	swapf	btemp,w
  1484  014E  0009               	retfie
  1485  014F                     __end_of_isr:
  1486  007E                     btemp	set	126	;btemp
  1487  007E                     wtemp0	set	126
  1488                           
  1489                           	psect	intentry
  1490  0004                     __pintentry:	
  1491                           ;incstack = 0
  1492                           ; Regs used in _isr: [wreg+status,2+status,0]
  1493                           
  1494  0004                     interrupt_function:
  1495  007E                     saved_w	set	btemp
  1496  0004  00FE               	movwf	btemp
  1497  0005  0E03               	swapf	3,w
  1498  0006  00F1               	movwf	??_isr+1
  1499  0007  080A               	movf	10,w
  1500  0008  00F2               	movwf	??_isr+2
  1501  0009  120A  118A  28F2   	ljmp	_isr
  1502                           
  1503                           	psect	idloc
  1504                           
  1505                           ;Config register IDLOC0 @ 0x2000
  1506                           ;	unspecified, using default values
  1507  2000                     	org	8192
  1508  2000  3FFF               	dw	16383
  1509                           
  1510                           ;Config register IDLOC1 @ 0x2001
  1511                           ;	unspecified, using default values
  1512  2001                     	org	8193
  1513  2001  3FFF               	dw	16383
  1514                           
  1515                           ;Config register IDLOC2 @ 0x2002
  1516                           ;	unspecified, using default values
  1517  2002                     	org	8194
  1518  2002  3FFF               	dw	16383
  1519                           
  1520                           ;Config register IDLOC3 @ 0x2003
  1521                           ;	unspecified, using default values
  1522  2003                     	org	8195
  1523  2003  3FFF               	dw	16383
  1524                           
  1525                           	psect	config
  1526                           
  1527                           ;Config register CONFIG1 @ 0x2007
  1528                           ;	Oscillator Selection bits
  1529                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1530                           ;	Watchdog Timer Enable bit
  1531                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1532                           ;	Power-up Timer Enable bit
  1533                           ;	PWRTE = OFF, PWRT disabled
  1534                           ;	RE3/MCLR pin function select bit
  1535                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1536                           ;	Code Protection bit
  1537                           ;	CP = OFF, Program memory code protection is disabled
  1538                           ;	Data Code Protection bit
  1539                           ;	CPD = OFF, Data memory code protection is disabled
  1540                           ;	Brown Out Reset Selection bits
  1541                           ;	BOREN = OFF, BOR disabled
  1542                           ;	Internal External Switchover bit
  1543                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1544                           ;	Fail-Safe Clock Monitor Enabled bit
  1545                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1546                           ;	Low Voltage Programming Enable bit
  1547                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1548                           ;	In-Circuit Debugger Mode bit
  1549                           ;	DEBUG = 0x1, unprogrammed default
  1550  2007                     	org	8199
  1551  2007  20D4               	dw	8404
  1552                           
  1553                           ;Config register CONFIG2 @ 0x2008
  1554                           ;	Brown-out Reset Selection bit
  1555                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1556                           ;	Flash Program Memory Self Write Enable bits
  1557                           ;	WRT = OFF, Write protection off
  1558  2008                     	org	8200
  1559  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     16      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1748
                                             14 BANK0      2     2      0
                           _division
                       _set_displays
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_displays                                         4     2      2     218
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _division                                             5     5      0    1530
                                              9 BANK0      5     5      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _set_displays
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 09 00:46:39 2022

                      pc 0002           ___bmul@product 0075                       l81 0180  
                     l75 01AB                       l84 00F1                       l87 01E0  
           ___awdiv@sign 0026                       fsr 0004      ___wmul@multiplicand 0075  
                    l173 018D                      l326 0091                      l175 01A5  
                    l199 01F5                      l941 0153                      l951 015D  
                    l943 0159                      l961 0162                      l953 015E  
                    l945 015A                      l971 0169                      l963 0165  
                    l955 015F                      l947 015B                      l939 014F  
                    l981 0170                      l973 016C                      l965 0166  
                    l957 0160                      l949 015C                      l991 0178  
                    l983 0171                      l975 016D                      l967 0167  
                    l959 0161                      l993 0179                      l985 0172  
                    l977 016E                      l969 0168                      l995 017A  
                    l987 0173                      l979 016F                      l997 017D  
                    l989 0177                      l999 017E                      u520 01A1  
                    u521 01A0                      u505 018E                      u610 006F  
                    u530 01E7                      u611 006E                      u531 01E6  
                    u515 0195                      u540 01F4                      u605 005F  
                    u541 01F3                      u630 0083                      u550 0030  
                    u631 0082                      u615 006B                      u551 002F  
                    u640 0088                      u560 003B                      u641 0087  
                    u625 0077                      u561 003A                      u570 004C  
                    u490 0187                      u571 004B                      u491 0186  
                    u590 005E                      u591 005D                      u585 0050  
                    _isr 00F2                      fsr0 0004                      indf 0000  
                   l1001 017F                     l1101 004C                     l1111 006F  
                   l1103 004F                     l1007 01C8                     l1121 0088  
                   l1113 0075                     l1105 0056                     l1123 008D  
                   l1115 0076                     l1107 005A                     l1131 01A6  
                   l1117 007D                     l1109 005E                     l1061 0194  
                   l1133 01B3                     l1119 0083                     l1071 01E3  
                   l1063 019B                     l1055 0181                     l1127 0095  
                   l1073 01E7                     l1065 01A1                     l1057 0183  
                   l1091 0037                     l1083 0029                     l1075 01EB  
                   l1059 0187                     l1093 003B                     l1085 002C  
                   l1077 01ED                     l1069 01E2                     l1095 0040  
                   l1087 0030                     l1079 01F4                     l1097 0044  
                   l1089 0035                     l1099 0046                     ?_isr 0070  
                   i1l60 0101                     i1l70 0148                     _TMR0 0001  
                   _main 01A6                     btemp 007E                     start 000C  
      ___bmul@multiplier 0076                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0092                    _ANSEL 0188          ___awdiv@divisor 0020  
        ___awdiv@counter 0025                    u41_20 00F6                    u41_21 00F5  
                  u42_20 00FC                    u42_21 00FB                    u43_20 0105  
                  u43_21 0104                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u44_20 010C                    u44_21 010B                    u45_20 0116  
                  u45_21 0115                    u46_20 0125                    u46_21 0124  
                  u47_20 0131                    u47_21 0130                    u48_20 0140  
                  u48_21 013F                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _setup 014F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 01C7                   ??_main 002E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1011 00F2  
                 i1l1013 00F6                   i1l1021 0108                   i1l1031 0125  
                 i1l1023 010C                   i1l1015 00FC                   i1l1041 0140  
                 i1l1033 0129                   i1l1025 0116                   i1l1017 0105  
                 i1l1043 0144                   i1l1035 012C                   i1l1027 011C  
                 i1l1019 0107                   i1l1037 0131                   i1l1045 0145  
                 i1l1029 011D                   i1l1047 0146                   i1l1039 013A  
                 ___bmul 01E1         __end_of_division 00F2                   ___wmul 0181  
              ??___awdiv 0024         ___awdiv@quotient 0027                   saved_w 007E  
__end_of__initialization 0025      ___bmul@multiplicand 0073           __pcstackCOMMON 0070  
           __pidataBANK0 0209            __end_of_setup 0181           _OPTION_REGbits 0081  
                ??_setup 0073               __pbssBANK0 003A               __pmaintext 01A6  
                ?___bmul 0073                  ?___wmul 0073               __pintentry 0004  
              ?_division 0070            ?_set_displays 0073                  ___awdiv 0029  
                __ptext1 014F                  __ptext2 01C7                  __ptext3 0092  
                __ptext4 0181                  __ptext5 01E1                  __ptext6 0029  
                __ptext7 00F2               _tabla_7seg 0030                  _val_div 003D  
   end_of_initialization 0025               ??_division 0029           ??_set_displays 0075  
              _PORTBbits 0006                _TRISBbits 0086                _TRISEbits 0089  
         division@CONTEO 002D           __end_of___bmul 01F6           __end_of___wmul 01A6  
    start_initialization 000F              __end_of_isr 014F                 ??___bmul 0074  
               ??___wmul 0077               init_fetch0 01F6              __pdataBANK0 0030  
   __end_of_set_displays 01E1              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0020                _cont_tmr0 007A  
      interrupt_function 0004           ___wmul@product 0077                 _IOCBbits 0096  
      ___wmul@multiplier 0073                 _WPUBbits 0095                 _banderas 0079  
               _division 0092             _set_displays 01C7                 _val_disp 003A  
             _INTCONbits 000B                 init_ram0 01FA                 intlevel1 0000  
             _OSCCONbits 008F     set_displays@CONTEO_C 0074     set_displays@CONTEO_D 0073  
   set_displays@CONTEO_U 0076  
